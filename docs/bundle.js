(()=>{"use strict";const e=(e,t)=>`${e}=${encodeURIComponent(t)}`,t=e=>e.toISOString().replace(/-|:|\.\d+/g,""),n=(e,t)=>({hour:e.hour+t.hour,minute:e.minute+t.minute}),r=(e,t)=>new Date(e.setHours(t.hour,t.minute)),a=e=>{const t=(e=>{const t=(e=>e.replace(/[０-９]/g,(e=>String.fromCharCode(e.charCodeAt(0)-65248))))(e).replace(/\s/g,"");return Array.from(t.matchAll(/(?:(?<year>\d{1,4}[\/年])?\s*(?<date>\d{1,2}(?:[\/-]\d{1,2}|\s?[\/月]\s?\d{1,2}日?)))/g)).map((e=>{const t=e.groups?.year?(e=>e<100?e+100*Math.floor((new Date).getFullYear()/100):e)(parseInt(e.groups.year.replace(/[\/年]/g,""))):(new Date).getFullYear(),n=e.groups?.date.replace(/\s|月|日/g,"/").replace(/[\/年]/g,"-");return new Date(`${t}-${n}`)})).filter((e=>!(e=>Number.isNaN(e.getTime()))(e)))})(e),a=(e=>Array.from(e.matchAll(/(?<hour>\d{1,2})[:：時](?<minute>\d{2})?(?!間)/g)).map((e=>({hour:parseInt(e.groups?.hour??"0"),minute:parseInt(e.groups?.minute??"0")}))))(e);if(0===t.length)return{isAllday:!0,start:new Date};if(0===a.length)return{isAllday:!0,start:t[0]};const o=r(t[0],a[0]),s=t.length>1&&t[1].getTime()>t[0].getTime()?t[1]:t[0],i=(e=>{const t=e.match(/(?<hour>\d{1,2})時間(?<minute>(半|\d{1,2}分))?/);if(t&&t.groups?.hour)return{hour:parseInt(t.groups.hour),minute:"半"===t.groups?.minute?30:parseInt(t.groups?.minute??"0")}})(e),l=i?n(a[0],i):a.length>1?a[1]:n(a[0],{hour:1,minute:0});return{isAllday:!1,start:o,end:r(s,l)}},o=e=>{const{text:t,details:n}=(e=>{const t=e.split("\n");return{text:t[0],details:t.slice(1).join("\n")}})(e),r=a(e),o=(e=>{const t=[/https:\/\/(?:[a-zA-Z0-9-]+\.)?zoom\.us\/j\/[a-zA-Z0-9]+(?:\?pwd=[a-zA-Z0-9]+)?/,/https:\/\/meet\.google\.com\/[a-zA-Z0-9]{3}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{3}(?:\?[-a-zA-Z0-9=&]+)?/];for(const n of t){const t=e.match(n);if(t)return t[0]}})(e);return{text:t,details:n,dates:r,location:o}};let s,i=o("");document?.getElementById("eventDetails")?.addEventListener("paste",(async()=>{const e=document.getElementById("useHtml")?.checked??!1;s=e?await(async()=>{try{const e=await navigator.clipboard.read();for(const t of e)if(t.types.includes("text/html")){const e=await t.getType("text/html");return await e.text()}return}catch(e){return void console.error(e)}})():void 0,s=s?(e=>{const t=(new DOMParser).parseFromString(e,"text/html");return t.querySelectorAll("[style]").forEach((e=>{e.removeAttribute("style")})),t.documentElement.innerHTML})(s):void 0;const t=document.getElementById("eventDetails"),n=new Event("input",{bubbles:!0});t.dispatchEvent(n)})),document?.getElementById("eventDetails")?.addEventListener("input",(()=>{const e=document.getElementById("eventDetails")?.value,t=s?e.split("\n")[0]+"\n"+s:e;i=o(t),(e=>{if(document.getElementById("previewTitle").innerText=e.text,document.getElementById("previewDescription").innerHTML=(e=>{const t=(new DOMParser).parseFromString(e,"text/html");return t.querySelectorAll("script").forEach((e=>{e.remove()})),t.documentElement.innerHTML})(e.details),document.getElementById("previewLocation").innerText=e.location??"",!e.dates)return;const t=e.dates.isAllday?e.dates.start.toLocaleDateString():`${e.dates.start.toLocaleString()} - ${e.dates.end.toLocaleString()}`;document.getElementById("previewDate").innerText=t})(i)})),document?.getElementById("generateLink")?.addEventListener("click",(()=>{const n=(n=>{const r=new URLSearchParams;return r.append("text",n.text),r.append("details",n.details),n.dates&&r.append("dates",((n,r={isAllday:!0,start:new Date})=>{if(r.isAllday){const a=t(r.start).replace(/T.*$/,"");return e(n,`${a}/${a}`)}const a=t(r.start),o=t(r.end);return e(n,`${a}/${o}`)})("dates",n.dates)),n.location&&r.append("location",n.location),`https://calendar.google.com/calendar/render?action=TEMPLATE&${r.toString()}`})(i);window.open(n,"_blank")}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFPLElBQUlqQyxTQUdiLEdBQUd3RyxFQUFXeEUsU0FBUyxDQUNyQixNQUFNakMsRUFBT1YsRUFBY21ILEVBQVd2RSxPQUFPekMsUUFBUSxPQUFRLElBQzdELE9BQU9QLEVBQWdCQyxFQUFLLEdBQUdhLEtBQVFBLElBQ3pDLENBRUEsTUFBTWtDLEVBQVE1QyxFQUFjbUgsRUFBV3ZFLE9BQ2pDSyxFQUFNakQsRUFBY21ILEVBQVdsRSxLQUNyQyxPQUFPckQsRUFBZ0JDLEVBQUssR0FBRytDLEtBQVNLLElBQU0sRUFRckJtRSxDQUFvQixRQUFTTCxFQUFNckQsUUFFeERxRCxFQUFNaEQsVUFDUmlELEVBQU9FLE9BQU8sV0FBWUgsRUFBTWhELFVBRTNCLCtEQUFxQmlELEVBQU9LLFlBQVksRUl0QjlCQyxDQUEyQnJELEdBRTVDc0QsT0FBT0MsS0FBS1YsRUFBVSxTQUFTLEciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZXh0LXRvLWNhbGVuZGFyLWV2ZW50Ly4vc3JjL2xpYi9jbGlwYm9hcmQudHMiLCJ3ZWJwYWNrOi8vdGV4dC10by1jYWxlbmRhci1ldmVudC8uL3NyYy9ldmVudC9ldmVudC50cyIsIndlYnBhY2s6Ly90ZXh0LXRvLWNhbGVuZGFyLWV2ZW50Ly4vc3JjL2V2ZW50L3BhcnNlci9kYXRlcy50cyIsIndlYnBhY2s6Ly90ZXh0LXRvLWNhbGVuZGFyLWV2ZW50Ly4vc3JjL2V2ZW50L3BhcnNlci9tYWluLnRzIiwid2VicGFjazovL3RleHQtdG8tY2FsZW5kYXItZXZlbnQvLi9zcmMvZXZlbnQvcGFyc2VyL2xvY2F0aW9uLnRzIiwid2VicGFjazovL3RleHQtdG8tY2FsZW5kYXItZXZlbnQvLi9zcmMvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vdGV4dC10by1jYWxlbmRhci1ldmVudC8uL3NyYy9saWIvaHRtbC50cyIsIndlYnBhY2s6Ly90ZXh0LXRvLWNhbGVuZGFyLWV2ZW50Ly4vc3JjL2xpYi9wcmV2aWV3LnRzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBnZXRDbGlwYm9hcmRIVE1MID0gYXN5bmMgKCkgPT4ge1xuICB0cnkge1xuICAgIGNvbnN0IGNsaXBib2FyZEl0ZW1zID0gYXdhaXQgbmF2aWdhdG9yLmNsaXBib2FyZC5yZWFkKCk7XG5cbiAgICBmb3IgKGNvbnN0IGl0ZW0gb2YgY2xpcGJvYXJkSXRlbXMpIHtcbiAgICAgIGlmIChpdGVtLnR5cGVzLmluY2x1ZGVzKCd0ZXh0L2h0bWwnKSkge1xuICAgICAgICBjb25zdCBibG9iID0gYXdhaXQgaXRlbS5nZXRUeXBlKCd0ZXh0L2h0bWwnKTtcbiAgICAgICAgY29uc3QgaHRtbFRleHQgPSBhd2FpdCBibG9iLnRleHQoKTtcbiAgICAgICAgcmV0dXJuIGh0bWxUZXh0O1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiB1bmRlZmluZWQ7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICBjb25zb2xlLmVycm9yKGUpO1xuICAgIHJldHVybiB1bmRlZmluZWQ7XG4gIH1cbn07XG4iLCJpbXBvcnQgeyBFVkVOVF9ST09UX1VSTCB9IGZyb20gJy4vY29uc3RhbnQnO1xuXG5leHBvcnQgdHlwZSBFdmVudERhdGVzID1cbiAgfCB7XG4gICAgICBpc0FsbGRheTogZmFsc2U7XG4gICAgICBzdGFydDogRGF0ZTtcbiAgICAgIGVuZDogRGF0ZTtcbiAgICB9XG4gIHwge1xuICAgICAgaXNBbGxkYXk6IHRydWU7XG4gICAgICBzdGFydDogRGF0ZTtcbiAgICB9O1xuXG5leHBvcnQgdHlwZSBHb29nbGVDYWxlbmRhckV2ZW50ID0ge1xuICB0ZXh0OiBzdHJpbmc7XG4gIGRldGFpbHM6IHN0cmluZztcbiAgZGF0ZXM/OiBFdmVudERhdGVzO1xuICBsb2NhdGlvbj86IHN0cmluZztcbn07XG5cbmNvbnN0IHBhcmFtVG9VUkxQYXJhbSA9IChrZXk6IHN0cmluZywgdmFsdWU6IHN0cmluZyk6IHN0cmluZyA9PiB7XG4gIHJldHVybiBgJHtrZXl9PSR7ZW5jb2RlVVJJQ29tcG9uZW50KHZhbHVlKX1gO1xufTtcblxuY29uc3QgZGF0ZVRvUkZDNTU0NSA9IChkYXRlOiBEYXRlKTogc3RyaW5nID0+IHtcbiAgcmV0dXJuIGRhdGUudG9JU09TdHJpbmcoKS5yZXBsYWNlKC8tfDp8XFwuXFxkKy9nLCAnJyk7XG59O1xuXG5jb25zdCBkYXRlUGFyYW1Ub1VSTFBhcmFtID0gKFxuICBrZXk6IHN0cmluZyxcbiAgZXZlbnREYXRlczogRXZlbnREYXRlcyA9IHtcbiAgICBpc0FsbGRheTogdHJ1ZSxcbiAgICBzdGFydDogbmV3IERhdGUoKSxcbiAgfVxuKTogc3RyaW5nID0+IHtcbiAgaWYoZXZlbnREYXRlcy5pc0FsbGRheSl7XG4gICAgY29uc3QgdGltZSA9IGRhdGVUb1JGQzU1NDUoZXZlbnREYXRlcy5zdGFydCkucmVwbGFjZSgvVC4qJC8sICcnKTtcbiAgICByZXR1cm4gcGFyYW1Ub1VSTFBhcmFtKGtleSwgYCR7dGltZX0vJHt0aW1lfWApO1xuICB9XG5cbiAgY29uc3Qgc3RhcnQgPSBkYXRlVG9SRkM1NTQ1KGV2ZW50RGF0ZXMuc3RhcnQpO1xuICBjb25zdCBlbmQgPSBkYXRlVG9SRkM1NTQ1KGV2ZW50RGF0ZXMuZW5kKTtcbiAgcmV0dXJuIHBhcmFtVG9VUkxQYXJhbShrZXksIGAke3N0YXJ0fS8ke2VuZH1gKTtcbn07XG5cbmV4cG9ydCBjb25zdCBtYWtlR29vZ2xlQ2FsZW5kYXJFdmVudFVSTCA9IChldmVudDogR29vZ2xlQ2FsZW5kYXJFdmVudCk6IHN0cmluZyA9PiB7XG4gIGNvbnN0IHBhcmFtcyA9IG5ldyBVUkxTZWFyY2hQYXJhbXMoKTtcbiAgcGFyYW1zLmFwcGVuZCgndGV4dCcsIGV2ZW50LnRleHQpO1xuICBwYXJhbXMuYXBwZW5kKCdkZXRhaWxzJywgZXZlbnQuZGV0YWlscyk7XG4gIGlmIChldmVudC5kYXRlcykge1xuICAgIHBhcmFtcy5hcHBlbmQoJ2RhdGVzJywgZGF0ZVBhcmFtVG9VUkxQYXJhbSgnZGF0ZXMnLCBldmVudC5kYXRlcykpO1xuICB9XG4gIGlmIChldmVudC5sb2NhdGlvbikge1xuICAgIHBhcmFtcy5hcHBlbmQoJ2xvY2F0aW9uJywgZXZlbnQubG9jYXRpb24pO1xuICB9XG4gIHJldHVybiBgJHtFVkVOVF9ST09UX1VSTH0mJHtwYXJhbXMudG9TdHJpbmcoKX1gO1xufTtcbiIsImltcG9ydCB7IEV2ZW50RGF0ZXMgfSBmcm9tICcuLi9ldmVudCc7XG5cbmNvbnN0IHplbmtha3VEaWdpdHNUb0hhbmtha3UgPSAodGV4dDogc3RyaW5nKTogc3RyaW5nID0+IHtcbiAgcmV0dXJuIHRleHQucmVwbGFjZSgvW++8kC3vvJldL2csIChzKSA9PiB7XG4gICAgcmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUocy5jaGFyQ29kZUF0KDApIC0gMHhmZWUwKTtcbiAgfSk7XG59O1xuXG5jb25zdCBub3JtYWxpemVZZWFyID0gKHllYXI6IG51bWJlcik6IG51bWJlciA9PiB7XG4gIGlmICh5ZWFyIDwgMTAwKSB7XG4gICAgY29uc3QgY3VycmVudENlbnR1cnkgPSBNYXRoLmZsb29yKG5ldyBEYXRlKCkuZ2V0RnVsbFllYXIoKSAvIDEwMCkgKiAxMDA7XG4gICAgcmV0dXJuIHllYXIgKyBjdXJyZW50Q2VudHVyeTtcbiAgfVxuICByZXR1cm4geWVhcjtcbn07XG5cbmNvbnN0IGlzSW52YWxpZERhdGUgPSAoZGF0ZTogRGF0ZSk6IGJvb2xlYW4gPT4ge1xuICByZXR1cm4gTnVtYmVyLmlzTmFOKGRhdGUuZ2V0VGltZSgpKTtcbn07XG5cbmNvbnN0IGZpbmRBbGxZZWFyQW5kRGF5cyA9ICh0ZXh0OiBzdHJpbmcpOiBEYXRlW10gPT4ge1xuICBjb25zdCBub3JtYWxpemVkVGV4dCA9IHplbmtha3VEaWdpdHNUb0hhbmtha3UodGV4dCkucmVwbGFjZSgvXFxzL2csICcnKTtcbiAgY29uc3QgZGF0ZVJlZ2V4ID1cbiAgICAvKD86KD88eWVhcj5cXGR7MSw0fVtcXC/lubRdKT9cXHMqKD88ZGF0ZT5cXGR7MSwyfSg/OltcXC8tXVxcZHsxLDJ9fFxccz9bXFwv5pyIXVxccz9cXGR7MSwyfeaXpT8pKSkvZztcbiAgY29uc3QgbWF0Y2hlcyA9IEFycmF5LmZyb20obm9ybWFsaXplZFRleHQubWF0Y2hBbGwoZGF0ZVJlZ2V4KSk7XG5cbiAgY29uc3QgZGF0ZXMgPSBtYXRjaGVzLm1hcCgobWF0Y2gpID0+IHtcbiAgICBjb25zdCB5ZWFyID0gbWF0Y2guZ3JvdXBzPy55ZWFyXG4gICAgICA/IG5vcm1hbGl6ZVllYXIocGFyc2VJbnQobWF0Y2guZ3JvdXBzLnllYXIucmVwbGFjZSgvW1xcL+W5tF0vZywgJycpKSlcbiAgICAgIDogbmV3IERhdGUoKS5nZXRGdWxsWWVhcigpO1xuICAgIGNvbnN0IGRhdGUgPSBtYXRjaC5ncm91cHM/LmRhdGUucmVwbGFjZSgvXFxzfOaciHzml6UvZywgJy8nKS5yZXBsYWNlKC9bXFwv5bm0XS9nLCAnLScpO1xuICAgIHJldHVybiBuZXcgRGF0ZShgJHt5ZWFyfS0ke2RhdGV9YCk7XG4gIH0pO1xuXG4gIHJldHVybiBkYXRlcy5maWx0ZXIoKGRhdGUpID0+ICFpc0ludmFsaWREYXRlKGRhdGUpKTtcbn07XG5cbnR5cGUgVGltZSA9IHtcbiAgaG91cjogbnVtYmVyO1xuICBtaW51dGU6IG51bWJlcjtcbn07XG5cbmNvbnN0IGZpbmRBbGxUaW1lcyA9ICh0ZXh0OiBzdHJpbmcpOiBUaW1lW10gPT4ge1xuICBjb25zdCB0aW1lUmVnZXggPSAvKD88aG91cj5cXGR7MSwyfSlbOu+8muaZgl0oPzxtaW51dGU+XFxkezJ9KT8oPyHplpMpL2c7XG4gIGNvbnN0IG1hdGNoZXMgPSBBcnJheS5mcm9tKHRleHQubWF0Y2hBbGwodGltZVJlZ2V4KSk7XG5cbiAgY29uc3QgdGltZXMgPSBtYXRjaGVzLm1hcCgobWF0Y2gpID0+IHtcbiAgICByZXR1cm4ge1xuICAgICAgaG91cjogcGFyc2VJbnQobWF0Y2guZ3JvdXBzPy5ob3VyID8/ICcwJyksXG4gICAgICBtaW51dGU6IHBhcnNlSW50KG1hdGNoLmdyb3Vwcz8ubWludXRlID8/ICcwJyksXG4gICAgfTtcbiAgfSk7XG5cbiAgcmV0dXJuIHRpbWVzO1xufTtcblxuY29uc3QgZmluZFRpbWVSYW5nZSA9ICh0ZXh0OiBzdHJpbmcpOiBUaW1lIHwgdW5kZWZpbmVkID0+IHtcbiAgY29uc3QgdGltZVJlZ2V4ID0gLyg/PGhvdXI+XFxkezEsMn0p5pmC6ZaTKD88bWludXRlPijljYp8XFxkezEsMn3liIYpKT8vO1xuICBjb25zdCBtYXRjaCA9IHRleHQubWF0Y2godGltZVJlZ2V4KTtcblxuICBpZiAoIW1hdGNoIHx8ICFtYXRjaC5ncm91cHM/LmhvdXIpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICBjb25zdCBob3VyID0gcGFyc2VJbnQobWF0Y2guZ3JvdXBzLmhvdXIpO1xuICBjb25zdCBtaW51dGUgPVxuICAgIG1hdGNoLmdyb3Vwcz8ubWludXRlID09PSAn5Y2KJyA/IDMwIDogcGFyc2VJbnQobWF0Y2guZ3JvdXBzPy5taW51dGUgPz8gJzAnKTtcbiAgcmV0dXJuIHsgaG91ciwgbWludXRlIH07XG59O1xuXG5jb25zdCBhZGRUaW1lID0gKHg6IFRpbWUsIHk6IFRpbWUpOiBUaW1lID0+IHtcbiAgcmV0dXJuIHtcbiAgICBob3VyOiB4LmhvdXIgKyB5LmhvdXIsXG4gICAgbWludXRlOiB4Lm1pbnV0ZSArIHkubWludXRlLFxuICB9O1xufTtcblxuY29uc3Qgc2V0VGltZVRvRGF0ZSA9IChkYXRlOiBEYXRlLCB0aW1lOiBUaW1lKTogRGF0ZSA9PiB7XG4gIHJldHVybiBuZXcgRGF0ZShkYXRlLnNldEhvdXJzKHRpbWUuaG91ciwgdGltZS5taW51dGUpKTtcbn07XG5cbmV4cG9ydCBjb25zdCBleHRyYWN0U3RhcnRBbmRFbmREYXRlcyA9ICh0ZXh0OiBzdHJpbmcpOiBFdmVudERhdGVzID0+IHtcbiAgY29uc3QgeWVhckFuZERheXMgPSBmaW5kQWxsWWVhckFuZERheXModGV4dCk7XG4gIGNvbnN0IHRpbWVzID0gZmluZEFsbFRpbWVzKHRleHQpO1xuXG4gIGlmICh5ZWFyQW5kRGF5cy5sZW5ndGggPT09IDApIHtcbiAgICByZXR1cm4ge1xuICAgICAgaXNBbGxkYXk6IHRydWUsXG4gICAgICBzdGFydDogbmV3IERhdGUoKSxcbiAgICB9O1xuICB9XG5cbiAgaWYgKHRpbWVzLmxlbmd0aCA9PT0gMCkge1xuICAgIHJldHVybiB7XG4gICAgICBpc0FsbGRheTogdHJ1ZSxcbiAgICAgIHN0YXJ0OiB5ZWFyQW5kRGF5c1swXSxcbiAgICB9O1xuICB9XG5cbiAgLy8gc3RhcnTjga7ml6Xku5jjgavmmYLliLvjgpLoqK3lrppcbiAgY29uc3Qgc3RhcnQgPSBzZXRUaW1lVG9EYXRlKHllYXJBbmREYXlzWzBdLCB0aW1lc1swXSk7XG5cbiAgLy8gZW5k44Gu5pel5LuY44KS5oyH5a6a44CC5pmC5Yi744GM6KSH5pWw44GC44KL5aC05ZCI44Gv77yS44Gk55uu44KS44CB44Gq44GE5aC05ZCI44Gv77yR44Gk55uu77yIc3RhcnTjgajlkIzjgZjvvInjgpLkvb/jgYbjgIJcbiAgLy8g44Gf44Gg44GX44CB77yS44Gk55uu44Gu5pel5LuY44GM77yR44Gk55uu44KI44KK5YmN44Gu5aC05ZCI44Gv77yR44Gk55uu44KS5L2/44GG44CCXG4gIGNvbnN0IGVuZFRhcmdldERhdGUgPVxuICAgIHllYXJBbmREYXlzLmxlbmd0aCA+IDEgJiYgeWVhckFuZERheXNbMV0uZ2V0VGltZSgpID4geWVhckFuZERheXNbMF0uZ2V0VGltZSgpXG4gICAgICA/IHllYXJBbmREYXlzWzFdXG4gICAgICA6IHllYXJBbmREYXlzWzBdO1xuXG4gIC8vIOaJgOimgeaZgumWk+OBjOaMh+WumuOBleOCjOOBpuOBhOOCi+WgtOWQiOOBr+OAgXN0YXJ044Gu5pmC5Yi744Gr5omA6KaB5pmC6ZaT44KS5Yqg566X44GX44GmZW5k44Gu5pmC5Yi744KS6Kit5a6aXG4gIC8vIOaMh+WumuOBleOCjOOBpuOBhOOBquOBhOWgtOWQiOOBr+OAge+8kuOBpOebruOBruaZguWIu+OBvuOBn+OBr3N0YXJ044Gu5pmC5Yi744Gr77yR5pmC6ZaT44KS5Yqg566X44GX44GmZW5k44Gu5pmC5Yi744KS6Kit5a6aXG4gIGNvbnN0IHRpbWVSYW5nZSA9IGZpbmRUaW1lUmFuZ2UodGV4dCk7XG4gIGNvbnN0IGVuZFRhcmdldFRpbWUgPSB0aW1lUmFuZ2VcbiAgICA/IGFkZFRpbWUodGltZXNbMF0sIHRpbWVSYW5nZSlcbiAgICA6IHRpbWVzLmxlbmd0aCA+IDFcbiAgICA/IHRpbWVzWzFdXG4gICAgOiBhZGRUaW1lKHRpbWVzWzBdLCB7IGhvdXI6IDEsIG1pbnV0ZTogMCB9KTtcbiAgY29uc3QgZW5kID0gc2V0VGltZVRvRGF0ZShlbmRUYXJnZXREYXRlLCBlbmRUYXJnZXRUaW1lKTtcblxuICByZXR1cm4ge1xuICAgIGlzQWxsZGF5OiBmYWxzZSxcbiAgICBzdGFydCxcbiAgICBlbmQsXG4gIH07XG59O1xuIiwiaW1wb3J0IHsgRXZlbnREYXRlcywgR29vZ2xlQ2FsZW5kYXJFdmVudCwgbWFrZUdvb2dsZUNhbGVuZGFyRXZlbnRVUkwgfSBmcm9tICcuLi9ldmVudCc7XG5pbXBvcnQgeyBleHRyYWN0U3RhcnRBbmRFbmREYXRlcyB9IGZyb20gJy4vZGF0ZXMnO1xuaW1wb3J0IHsgZXh0cmFjdE1lZXRpbmdVUkwgfSBmcm9tICcuL2xvY2F0aW9uJztcblxuLyoqXG4gKiB0ZXh044GL44KJ44Kk44OZ44Oz44OI44K/44Kk44OI44Or44KS5oq95Ye644GZ44KL44CCXG4gKiDmnIDliJ3jga7ooYzjgpLjgqTjg5njg7Pjg4jjgr/jgqTjg4jjg6vjgajjgZfjgabmibHjgYbjgIJcbiAqL1xuY29uc3QgZXh0cmFjdEV2ZW50VGl0bGVBbmREZXRhaWxzID0gKFxuICB0ZXh0OiBzdHJpbmdcbik6IFBpY2s8R29vZ2xlQ2FsZW5kYXJFdmVudCwgJ3RleHQnIHwgJ2RldGFpbHMnPiA9PiB7XG4gIGNvbnN0IGxpbmVzID0gdGV4dC5zcGxpdCgnXFxuJyk7XG5cbiAgcmV0dXJuIHtcbiAgICB0ZXh0OiBsaW5lc1swXSxcbiAgICBkZXRhaWxzOiBsaW5lcy5zbGljZSgxKS5qb2luKCdcXG4nKSxcbiAgfTtcbn07XG5cbmV4cG9ydCBjb25zdCBtYWtlR29vZ2xlQ2FsZW5kYXJFdmVudFBhcmFtcyA9IChwbGFpblRleHQ6IHN0cmluZyk6IEdvb2dsZUNhbGVuZGFyRXZlbnQgPT4ge1xuICBjb25zdCB7IHRleHQsIGRldGFpbHMgfSA9IGV4dHJhY3RFdmVudFRpdGxlQW5kRGV0YWlscyhwbGFpblRleHQpO1xuICBjb25zdCBkYXRlczogRXZlbnREYXRlcyA9IGV4dHJhY3RTdGFydEFuZEVuZERhdGVzKHBsYWluVGV4dCk7XG4gIGNvbnN0IG1lZXRpbmdVUkwgPSBleHRyYWN0TWVldGluZ1VSTChwbGFpblRleHQpO1xuXG4gIHJldHVybiB7XG4gICAgdGV4dCxcbiAgICBkZXRhaWxzLFxuICAgIGRhdGVzLFxuICAgIGxvY2F0aW9uOiBtZWV0aW5nVVJMLFxuICB9O1xufTsiLCJleHBvcnQgY29uc3QgZXh0cmFjdE1lZXRpbmdVUkwgPSAodGV4dDogc3RyaW5nKTogc3RyaW5nIHwgdW5kZWZpbmVkID0+IHtcbiAgY29uc3QgdXJsUmVnZXggPSBbXG4gICAgL2h0dHBzOlxcL1xcLyg/OlthLXpBLVowLTktXStcXC4pP3pvb21cXC51c1xcL2pcXC9bYS16QS1aMC05XSsoPzpcXD9wd2Q9W2EtekEtWjAtOV0rKT8vLCAvLyBab29tXG4gICAgL2h0dHBzOlxcL1xcL21lZXRcXC5nb29nbGVcXC5jb21cXC9bYS16QS1aMC05XXszfS1bYS16QS1aMC05XXs0fS1bYS16QS1aMC05XXszfSg/OlxcP1stYS16QS1aMC05PSZdKyk/LywgLy8gR29vZ2xlIE1lZXRcbiAgXTtcblxuICBmb3IgKGNvbnN0IHJlZ2V4IG9mIHVybFJlZ2V4KSB7XG4gICAgY29uc3QgbWF0Y2ggPSB0ZXh0Lm1hdGNoKHJlZ2V4KTtcbiAgICBpZiAobWF0Y2gpIHtcbiAgICAgIHJldHVybiBtYXRjaFswXTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gdW5kZWZpbmVkO1xufTtcbiIsImltcG9ydCB7IGdldENsaXBib2FyZEhUTUwgfSBmcm9tICcuL2xpYi9jbGlwYm9hcmQnO1xuaW1wb3J0IHsgbWFrZUdvb2dsZUNhbGVuZGFyRXZlbnRVUkwgfSBmcm9tICcuL2V2ZW50L2V2ZW50JztcbmltcG9ydCB7IG1ha2VHb29nbGVDYWxlbmRhckV2ZW50UGFyYW1zIH0gZnJvbSAnLi9ldmVudC9wYXJzZXIvbWFpbic7XG5pbXBvcnQgeyBzZXRQcmV2aWV3IH0gZnJvbSAnLi9saWIvcHJldmlldyc7XG5pbXBvcnQgeyByZW1vdmVTdHlsZUF0dHJpYnV0ZSB9IGZyb20gJy4vbGliL2h0bWwnO1xuXG5sZXQgZXZlbnRQYXJhbXMgPSBtYWtlR29vZ2xlQ2FsZW5kYXJFdmVudFBhcmFtcygnJyk7XG5sZXQgY2xpcGJvYXJkSHRtbDogc3RyaW5nIHwgdW5kZWZpbmVkO1xuXG5kb2N1bWVudD8uZ2V0RWxlbWVudEJ5SWQoJ2V2ZW50RGV0YWlscycpPy5hZGRFdmVudExpc3RlbmVyKCdwYXN0ZScsIGFzeW5jICgpID0+IHtcbiAgY29uc3QgdXNlSHRtbCA9XG4gICAgKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd1c2VIdG1sJykgYXMgSFRNTElucHV0RWxlbWVudCk/LmNoZWNrZWQgPz8gZmFsc2U7XG4gIGNsaXBib2FyZEh0bWwgPSB1c2VIdG1sID8gYXdhaXQgZ2V0Q2xpcGJvYXJkSFRNTCgpIDogdW5kZWZpbmVkO1xuICBjbGlwYm9hcmRIdG1sID0gY2xpcGJvYXJkSHRtbCA/IHJlbW92ZVN0eWxlQXR0cmlidXRlKGNsaXBib2FyZEh0bWwpIDogdW5kZWZpbmVkO1xuXG4gIC8vIFBhc3Rl44Kk44OZ44Oz44OI44Gu5Yem55CG44GM57WC44KP44Gj44Gf44KJ44CB5omL5YuV44GnaW5wdXTjgqTjg5njg7Pjg4jjgpLjg4jjg6rjgqzjg7zjgZnjgotcbiAgY29uc3QgZXZlbnREZXRhaWxzRWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdldmVudERldGFpbHMnKSBhcyBIVE1MVGV4dEFyZWFFbGVtZW50O1xuICBjb25zdCBpbnB1dEV2ZW50ID0gbmV3IEV2ZW50KCdpbnB1dCcsIHsgYnViYmxlczogdHJ1ZSB9KTtcbiAgZXZlbnREZXRhaWxzRWxlbWVudC5kaXNwYXRjaEV2ZW50KGlucHV0RXZlbnQpO1xufSk7XG5cbmRvY3VtZW50Py5nZXRFbGVtZW50QnlJZCgnZXZlbnREZXRhaWxzJyk/LmFkZEV2ZW50TGlzdGVuZXIoJ2lucHV0JywgKCkgPT4ge1xuICBjb25zdCBpbnB1dFRleHQgPSAoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2V2ZW50RGV0YWlscycpIGFzIEhUTUxUZXh0QXJlYUVsZW1lbnQpXG4gICAgPy52YWx1ZTtcblxuICBjb25zdCB0ZXh0ID0gY2xpcGJvYXJkSHRtbFxuICAgID8gaW5wdXRUZXh0LnNwbGl0KCdcXG4nKVswXSArICdcXG4nICsgY2xpcGJvYXJkSHRtbFxuICAgIDogaW5wdXRUZXh0O1xuICBldmVudFBhcmFtcyA9IG1ha2VHb29nbGVDYWxlbmRhckV2ZW50UGFyYW1zKHRleHQpO1xuICBzZXRQcmV2aWV3KGV2ZW50UGFyYW1zKTtcbn0pO1xuXG5kb2N1bWVudD8uZ2V0RWxlbWVudEJ5SWQoJ2dlbmVyYXRlTGluaycpPy5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgY29uc3QgZXZlbnRVcmwgPSBtYWtlR29vZ2xlQ2FsZW5kYXJFdmVudFVSTChldmVudFBhcmFtcyk7XG5cbiAgd2luZG93Lm9wZW4oZXZlbnRVcmwsICdfYmxhbmsnKTtcbn0pO1xuIiwiZXhwb3J0IGNvbnN0IHJlbW92ZVNjcmlwdFRhZyA9IChodG1sOiBzdHJpbmcpOiBzdHJpbmcgPT4ge1xuICBjb25zdCBwYXJzZXIgPSBuZXcgRE9NUGFyc2VyKCk7XG4gIGNvbnN0IGRvYyA9IHBhcnNlci5wYXJzZUZyb21TdHJpbmcoaHRtbCwgJ3RleHQvaHRtbCcpO1xuXG4gIGRvYy5xdWVyeVNlbGVjdG9yQWxsKCdzY3JpcHQnKS5mb3JFYWNoKChlbGUpID0+IHtcbiAgICBlbGUucmVtb3ZlKCk7XG4gIH0pO1xuXG4gIHJldHVybiBkb2MuZG9jdW1lbnRFbGVtZW50LmlubmVySFRNTDtcbn07XG5cbmV4cG9ydCBjb25zdCByZW1vdmVTdHlsZUF0dHJpYnV0ZSA9IChodG1sOiBzdHJpbmcpOiBzdHJpbmcgPT4ge1xuICBjb25zdCBwYXJzZXIgPSBuZXcgRE9NUGFyc2VyKCk7XG4gIGNvbnN0IGRvYyA9IHBhcnNlci5wYXJzZUZyb21TdHJpbmcoaHRtbCwgJ3RleHQvaHRtbCcpO1xuXG4gIGRvYy5xdWVyeVNlbGVjdG9yQWxsKCdbc3R5bGVdJykuZm9yRWFjaCgoZWxlKSA9PiB7XG4gICAgZWxlLnJlbW92ZUF0dHJpYnV0ZSgnc3R5bGUnKTtcbiAgfSk7XG5cbiAgcmV0dXJuIGRvYy5kb2N1bWVudEVsZW1lbnQuaW5uZXJIVE1MO1xufTtcbiIsImltcG9ydCB7IEdvb2dsZUNhbGVuZGFyRXZlbnQgfSBmcm9tICcuLi9ldmVudC9ldmVudCc7XG5pbXBvcnQgeyByZW1vdmVTY3JpcHRUYWcgfSBmcm9tICcuL2h0bWwnO1xuXG5leHBvcnQgY29uc3Qgc2V0UHJldmlldyA9IChldmVudFBhcmFtczogR29vZ2xlQ2FsZW5kYXJFdmVudCkgPT4ge1xuICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncHJldmlld1RpdGxlJykhLmlubmVyVGV4dCA9IGV2ZW50UGFyYW1zLnRleHQ7XG4gIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdwcmV2aWV3RGVzY3JpcHRpb24nKSEuaW5uZXJIVE1MID0gcmVtb3ZlU2NyaXB0VGFnKFxuICAgIGV2ZW50UGFyYW1zLmRldGFpbHNcbiAgKTtcbiAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3ByZXZpZXdMb2NhdGlvbicpIS5pbm5lclRleHQgPSBldmVudFBhcmFtcy5sb2NhdGlvbiA/PyAnJztcblxuICBpZiAoIWV2ZW50UGFyYW1zLmRhdGVzKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIGNvbnN0IGRhdGVUZXh0ID0gZXZlbnRQYXJhbXMuZGF0ZXMuaXNBbGxkYXlcbiAgICA/IGV2ZW50UGFyYW1zLmRhdGVzLnN0YXJ0LnRvTG9jYWxlRGF0ZVN0cmluZygpXG4gICAgOiBgJHtldmVudFBhcmFtcy5kYXRlcy5zdGFydC50b0xvY2FsZVN0cmluZygpfSAtICR7ZXZlbnRQYXJhbXMuZGF0ZXMuZW5kLnRvTG9jYWxlU3RyaW5nKCl9YDtcbiAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3ByZXZpZXdEYXRlJykhLmlubmVyVGV4dCA9IGRhdGVUZXh0O1xuICByZXR1cm47XG59O1xuIl0sIm5hbWVzIjpbInBhcmFtVG9VUkxQYXJhbSIsImtleSIsInZhbHVlIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiZGF0ZVRvUkZDNTU0NSIsImRhdGUiLCJ0b0lTT1N0cmluZyIsInJlcGxhY2UiLCJhZGRUaW1lIiwieCIsInkiLCJob3VyIiwibWludXRlIiwic2V0VGltZVRvRGF0ZSIsInRpbWUiLCJEYXRlIiwic2V0SG91cnMiLCJleHRyYWN0U3RhcnRBbmRFbmREYXRlcyIsInRleHQiLCJ5ZWFyQW5kRGF5cyIsIm5vcm1hbGl6ZWRUZXh0IiwicyIsIlN0cmluZyIsImZyb21DaGFyQ29kZSIsImNoYXJDb2RlQXQiLCJ6ZW5rYWt1RGlnaXRzVG9IYW5rYWt1IiwiQXJyYXkiLCJmcm9tIiwibWF0Y2hBbGwiLCJtYXAiLCJtYXRjaCIsInllYXIiLCJncm91cHMiLCJNYXRoIiwiZmxvb3IiLCJnZXRGdWxsWWVhciIsIm5vcm1hbGl6ZVllYXIiLCJwYXJzZUludCIsImZpbHRlciIsIk51bWJlciIsImlzTmFOIiwiZ2V0VGltZSIsImlzSW52YWxpZERhdGUiLCJmaW5kQWxsWWVhckFuZERheXMiLCJ0aW1lcyIsImZpbmRBbGxUaW1lcyIsImxlbmd0aCIsImlzQWxsZGF5Iiwic3RhcnQiLCJlbmRUYXJnZXREYXRlIiwidGltZVJhbmdlIiwiZmluZFRpbWVSYW5nZSIsImVuZFRhcmdldFRpbWUiLCJlbmQiLCJtYWtlR29vZ2xlQ2FsZW5kYXJFdmVudFBhcmFtcyIsInBsYWluVGV4dCIsImRldGFpbHMiLCJsaW5lcyIsInNwbGl0Iiwic2xpY2UiLCJqb2luIiwiZXh0cmFjdEV2ZW50VGl0bGVBbmREZXRhaWxzIiwiZGF0ZXMiLCJtZWV0aW5nVVJMIiwidXJsUmVnZXgiLCJyZWdleCIsImV4dHJhY3RNZWV0aW5nVVJMIiwibG9jYXRpb24iLCJjbGlwYm9hcmRIdG1sIiwiZXZlbnRQYXJhbXMiLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwiYWRkRXZlbnRMaXN0ZW5lciIsImFzeW5jIiwidXNlSHRtbCIsImNoZWNrZWQiLCJjbGlwYm9hcmRJdGVtcyIsIm5hdmlnYXRvciIsImNsaXBib2FyZCIsInJlYWQiLCJpdGVtIiwidHlwZXMiLCJpbmNsdWRlcyIsImJsb2IiLCJnZXRUeXBlIiwiZSIsImNvbnNvbGUiLCJlcnJvciIsImdldENsaXBib2FyZEhUTUwiLCJ1bmRlZmluZWQiLCJodG1sIiwiZG9jIiwiRE9NUGFyc2VyIiwicGFyc2VGcm9tU3RyaW5nIiwicXVlcnlTZWxlY3RvckFsbCIsImZvckVhY2giLCJlbGUiLCJyZW1vdmVBdHRyaWJ1dGUiLCJkb2N1bWVudEVsZW1lbnQiLCJpbm5lckhUTUwiLCJyZW1vdmVTdHlsZUF0dHJpYnV0ZSIsImV2ZW50RGV0YWlsc0VsZW1lbnQiLCJpbnB1dEV2ZW50IiwiRXZlbnQiLCJidWJibGVzIiwiZGlzcGF0Y2hFdmVudCIsImlucHV0VGV4dCIsImlubmVyVGV4dCIsInJlbW92ZSIsInJlbW92ZVNjcmlwdFRhZyIsImRhdGVUZXh0IiwidG9Mb2NhbGVEYXRlU3RyaW5nIiwidG9Mb2NhbGVTdHJpbmciLCJzZXRQcmV2aWV3IiwiZXZlbnRVcmwiLCJldmVudCIsInBhcmFtcyIsIlVSTFNlYXJjaFBhcmFtcyIsImFwcGVuZCIsImV2ZW50RGF0ZXMiLCJkYXRlUGFyYW1Ub1VSTFBhcmFtIiwidG9TdHJpbmciLCJtYWtlR29vZ2xlQ2FsZW5kYXJFdmVudFVSTCIsIndpbmRvdyIsIm9wZW4iXSwic291cmNlUm9vdCI6IiJ9