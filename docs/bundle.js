(()=>{"use strict";const t=(t,e)=>`${t}=${encodeURIComponent(e)}`,e=t=>t.toISOString().replace(/-|:|\.\d+/g,""),n=(n,r={isAllday:!0,start:new Date})=>{if(r.isAllday){const a=e(r.start).replace(/T.*$/,"");return t(n,`${a}/${a}`)}const a=e(r.start),o=e(r.end);return t(n,`${a}/${o}`)},r=(t,e)=>({hour:t.hour+e.hour,minute:t.minute+e.minute}),a=(t,e)=>new Date(t.setHours(e.hour,e.minute)),o=t=>{const e=(t=>{const e=(t=>t.replace(/[０-９]/g,(t=>String.fromCharCode(t.charCodeAt(0)-65248))))(t).replace(/\s/g,"");return Array.from(e.matchAll(/(?:(?<year>\d{1,4}[\/年])?\s*(?<date>\d{1,2}(?:[\/-]\d{1,2}|\s?[\/月]\s?\d{1,2}日?)))/g)).map((t=>{const e=t.groups?.year?(t=>t<100?t+100*Math.floor((new Date).getFullYear()/100):t)(parseInt(t.groups.year.replace(/[\/年]/g,""))):(new Date).getFullYear(),n=t.groups?.date.replace(/\s|月|日/g,"/").replace(/[\/年]/g,"-");return new Date(`${e}-${n}`)})).filter((t=>!(t=>Number.isNaN(t.getTime()))(t)))})(t),n=(t=>Array.from(t.matchAll(/(?<hour>\d{1,2})[:：時](?<minute>\d{2})?(?!間)/g)).map((t=>({hour:parseInt(t.groups?.hour??"0"),minute:parseInt(t.groups?.minute??"0")}))))(t);if(0===e.length)return{isAllday:!0,start:new Date};if(0===n.length)return{isAllday:!0,start:e[0]};const o=a(e[0],n[0]),s=e.length>1&&e[1].getTime()>e[0].getTime()?e[1]:e[0],i=(t=>{const e=t.match(/(?<hour>\d{1,2})時間(?<minute>(半|\d{1,2}分))?/);if(e&&e.groups?.hour)return{hour:parseInt(e.groups.hour),minute:"半"===e.groups?.minute?30:parseInt(e.groups?.minute??"0")}})(t),l=i?r(n[0],i):n.length>1?n[1]:r(n[0],{hour:1,minute:0});return{isAllday:!1,start:o,end:a(s,l)}},s=t=>{const{text:e,details:n}=(t=>{const e=t.split("\n");return{text:e[0],details:e.slice(1).join("\n")}})(t),r=o(t),a=(t=>{const e=[/https:\/\/(?:[a-zA-Z0-9-]+\.)?zoom\.us\/j\/[a-zA-Z0-9]+(?:\?pwd=[a-zA-Z0-9]+)?/,/https:\/\/meet\.google\.com\/[a-zA-Z0-9]{3}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{3}(?:\?[-a-zA-Z0-9=&]+)?/];for(const n of e){const e=t.match(n);if(e)return e[0]}})(t);return{text:e,details:n,dates:r,location:a}};let i,l=s("");document?.getElementById("eventDetails")?.addEventListener("paste",(async()=>{const t=document.getElementById("useHtml")?.checked??!1;i=t?await(async()=>{try{const t=await navigator.clipboard.read();for(const e of t)if(e.types.includes("text/html")){const t=await e.getType("text/html");return await t.text()}return}catch(t){return void console.error(t)}})():void 0})),document?.getElementById("eventDetails")?.addEventListener("input",(()=>{const t=document.getElementById("eventDetails")?.value,e=i?t.split("\n")[0]+"\n"+i:t;l=s(e),(t=>{if(document.getElementById("previewTitle").innerText=t.text,document.getElementById("previewDescription").innerText=t.details,document.getElementById("previewLocation").innerText=t.location??"",!t.dates)return;const e=t.dates.isAllday?t.dates.start.toLocaleDateString():`${t.dates.start.toLocaleString()} - ${t.dates.end.toLocaleString()}`;document.getElementById("previewDate").innerText=e})(l)})),document?.getElementById("generateLink")?.addEventListener("click",(()=>{const e=`https://calendar.google.com/calendar/render?action=TEMPLATE&${[t("text",(r=l).text),t("details",r.details),n("dates",r.dates),r.location?t("location",r.location):void 0].filter((t=>void 0!==t)).join("&")}`;var r;window.open(e,"_blank")}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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R0tTZ0NHLFFBQXFCQyxDQUFTLElBR2hFbkIsVUFBVUMsZUFBZSxpQkFBaUJDLGlCQUFpQixTQUFTLEtBQ2xFLE1BQU1rQixFQUFhcEIsU0FBU0MsZUFBZSxpQkFDdkN2RSxNQUVFcUIsRUFBTytDLEVBQ1RzQixFQUFVaEMsTUFBTSxNQUFNLEdBQUssS0FBT1UsRUFDbENzQixFQUNKckIsRUFBY2YsRUFBOEJqQyxHQS9CM0IsQ0FBQ2dELElBS2xCLEdBSkFDLFNBQVNDLGVBQWUsZ0JBQWlCb0IsVUFBWXRCLEVBQVloRCxLQUNqRWlELFNBQVNDLGVBQWUsc0JBQXVCb0IsVUFBWXRCLEVBQVliLFFBQ3ZFYyxTQUFTQyxlQUFlLG1CQUFvQm9CLFVBQVl0QixFQUFZRixVQUFZLElBRTNFRSxFQUFZUCxNQUNmLE9BRUYsTUFBTThCLEVBQVd2QixFQUFZUCxNQUFNdEQsU0FDL0I2RCxFQUFZUCxNQUFNckQsTUFBTW9GLHFCQUN4QixHQUFHeEIsRUFBWVAsTUFBTXJELE1BQU1xRixzQkFBc0J6QixFQUFZUCxNQUFNbEQsSUFBSWtGLG1CQUMzRXhCLFNBQVNDLGVBQWUsZUFBZ0JvQixVQUFZQyxDQUM5QyxFQW9CTkcsQ0FBVzFCLEVBQVksSUFHekJDLFVBQVVDLGVBQWUsaUJBQWlCQyxpQkFBaUIsU0FBUyxLQUNsRSxNQUFNd0IsRUphQywrREFQUSxDQUNibEcsRUFBZ0IsUUFGdUJtRyxFSUxHNUIsR0pPWmhELE1BQzlCdkIsRUFBZ0IsVUFBV21HLEVBQU16QyxTQUNqQ2xELEVBQW9CLFFBQVMyRixFQUFNbkMsT0FDbkNtQyxFQUFNOUIsU0FBV3JFLEVBQWdCLFdBQVltRyxFQUFNOUIsZUFBWXNCLEdBQy9EaEQsUUFBUXlELFFBQW9CVCxJQUFWUyxJQUVldEMsS0FBSyxPQVJBLElBQUNxQyxFSUh6Q0UsT0FBT0MsS0FBS0osRUFBVSxTQUFTLEciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZXh0LXRvLWNhbGVuZGFyLWV2ZW50Ly4vc3JjL2xpYi9jbGlwYm9hcmQudHMiLCJ3ZWJwYWNrOi8vdGV4dC10by1jYWxlbmRhci1ldmVudC8uL3NyYy9ldmVudC9ldmVudC50cyIsIndlYnBhY2s6Ly90ZXh0LXRvLWNhbGVuZGFyLWV2ZW50Ly4vc3JjL2V2ZW50L3BhcnNlci9kYXRlcy50cyIsIndlYnBhY2s6Ly90ZXh0LXRvLWNhbGVuZGFyLWV2ZW50Ly4vc3JjL2V2ZW50L3BhcnNlci9tYWluLnRzIiwid2VicGFjazovL3RleHQtdG8tY2FsZW5kYXItZXZlbnQvLi9zcmMvZXZlbnQvcGFyc2VyL2xvY2F0aW9uLnRzIiwid2VicGFjazovL3RleHQtdG8tY2FsZW5kYXItZXZlbnQvLi9zcmMvaW5kZXgudHMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IGdldENsaXBib2FyZEhUTUwgPSBhc3luYyAoKSA9PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgY2xpcGJvYXJkSXRlbXMgPSBhd2FpdCBuYXZpZ2F0b3IuY2xpcGJvYXJkLnJlYWQoKTtcblxuICAgIGZvciAoY29uc3QgaXRlbSBvZiBjbGlwYm9hcmRJdGVtcykge1xuICAgICAgaWYgKGl0ZW0udHlwZXMuaW5jbHVkZXMoJ3RleHQvaHRtbCcpKSB7XG4gICAgICAgIGNvbnN0IGJsb2IgPSBhd2FpdCBpdGVtLmdldFR5cGUoJ3RleHQvaHRtbCcpO1xuICAgICAgICBjb25zdCBodG1sVGV4dCA9IGF3YWl0IGJsb2IudGV4dCgpO1xuICAgICAgICByZXR1cm4gaHRtbFRleHQ7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgfSBjYXRjaCAoZSkge1xuICAgIGNvbnNvbGUuZXJyb3IoZSk7XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgfVxufTtcbiIsImltcG9ydCB7IEVWRU5UX1JPT1RfVVJMIH0gZnJvbSAnLi9jb25zdGFudCc7XG5cbmV4cG9ydCB0eXBlIEV2ZW50RGF0ZXMgPVxuICB8IHtcbiAgICAgIGlzQWxsZGF5OiBmYWxzZTtcbiAgICAgIHN0YXJ0OiBEYXRlO1xuICAgICAgZW5kOiBEYXRlO1xuICAgIH1cbiAgfCB7XG4gICAgICBpc0FsbGRheTogdHJ1ZTtcbiAgICAgIHN0YXJ0OiBEYXRlO1xuICAgIH07XG5cbmV4cG9ydCB0eXBlIEdvb2dsZUNhbGVuZGFyRXZlbnQgPSB7XG4gIHRleHQ6IHN0cmluZztcbiAgZGV0YWlsczogc3RyaW5nO1xuICBkYXRlcz86IEV2ZW50RGF0ZXM7XG4gIGxvY2F0aW9uPzogc3RyaW5nO1xufTtcblxuY29uc3QgcGFyYW1Ub1VSTFBhcmFtID0gKGtleTogc3RyaW5nLCB2YWx1ZTogc3RyaW5nKTogc3RyaW5nID0+IHtcbiAgcmV0dXJuIGAke2tleX09JHtlbmNvZGVVUklDb21wb25lbnQodmFsdWUpfWA7XG59O1xuXG5jb25zdCBkYXRlVG9SRkM1NTQ1ID0gKGRhdGU6IERhdGUpOiBzdHJpbmcgPT4ge1xuICByZXR1cm4gZGF0ZS50b0lTT1N0cmluZygpLnJlcGxhY2UoLy18OnxcXC5cXGQrL2csICcnKTtcbn07XG5cbmNvbnN0IGRhdGVQYXJhbVRvVVJMUGFyYW0gPSAoXG4gIGtleTogc3RyaW5nLFxuICBldmVudERhdGVzOiBFdmVudERhdGVzID0ge1xuICAgIGlzQWxsZGF5OiB0cnVlLFxuICAgIHN0YXJ0OiBuZXcgRGF0ZSgpLFxuICB9XG4pOiBzdHJpbmcgPT4ge1xuICBpZihldmVudERhdGVzLmlzQWxsZGF5KXtcbiAgICBjb25zdCB0aW1lID0gZGF0ZVRvUkZDNTU0NShldmVudERhdGVzLnN0YXJ0KS5yZXBsYWNlKC9ULiokLywgJycpO1xuICAgIHJldHVybiBwYXJhbVRvVVJMUGFyYW0oa2V5LCBgJHt0aW1lfS8ke3RpbWV9YCk7XG4gIH1cblxuICBjb25zdCBzdGFydCA9IGRhdGVUb1JGQzU1NDUoZXZlbnREYXRlcy5zdGFydCk7XG4gIGNvbnN0IGVuZCA9IGRhdGVUb1JGQzU1NDUoZXZlbnREYXRlcy5lbmQpO1xuICByZXR1cm4gcGFyYW1Ub1VSTFBhcmFtKGtleSwgYCR7c3RhcnR9LyR7ZW5kfWApO1xufTtcblxuZXhwb3J0IGNvbnN0IG1ha2VHb29nbGVDYWxlbmRhckV2ZW50VVJMID0gKGV2ZW50OiBHb29nbGVDYWxlbmRhckV2ZW50KTogc3RyaW5nID0+IHtcbiAgY29uc3QgcGFyYW1zID0gW1xuICAgIHBhcmFtVG9VUkxQYXJhbSgndGV4dCcsIGV2ZW50LnRleHQpLFxuICAgIHBhcmFtVG9VUkxQYXJhbSgnZGV0YWlscycsIGV2ZW50LmRldGFpbHMpLFxuICAgIGRhdGVQYXJhbVRvVVJMUGFyYW0oJ2RhdGVzJywgZXZlbnQuZGF0ZXMpLFxuICAgIGV2ZW50LmxvY2F0aW9uID8gcGFyYW1Ub1VSTFBhcmFtKCdsb2NhdGlvbicsIGV2ZW50LmxvY2F0aW9uKSA6IHVuZGVmaW5lZCxcbiAgXS5maWx0ZXIoKHBhcmFtKSA9PiBwYXJhbSAhPT0gdW5kZWZpbmVkKTtcblxuICByZXR1cm4gYCR7RVZFTlRfUk9PVF9VUkx9JiR7cGFyYW1zLmpvaW4oJyYnKX1gO1xufTtcbiIsImltcG9ydCB7IEV2ZW50RGF0ZXMgfSBmcm9tICcuLi9ldmVudCc7XG5cbmNvbnN0IHplbmtha3VEaWdpdHNUb0hhbmtha3UgPSAodGV4dDogc3RyaW5nKTogc3RyaW5nID0+IHtcbiAgcmV0dXJuIHRleHQucmVwbGFjZSgvW++8kC3vvJldL2csIChzKSA9PiB7XG4gICAgcmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUocy5jaGFyQ29kZUF0KDApIC0gMHhmZWUwKTtcbiAgfSk7XG59O1xuXG5jb25zdCBub3JtYWxpemVZZWFyID0gKHllYXI6IG51bWJlcik6IG51bWJlciA9PiB7XG4gIGlmICh5ZWFyIDwgMTAwKSB7XG4gICAgY29uc3QgY3VycmVudENlbnR1cnkgPSBNYXRoLmZsb29yKG5ldyBEYXRlKCkuZ2V0RnVsbFllYXIoKSAvIDEwMCkgKiAxMDA7XG4gICAgcmV0dXJuIHllYXIgKyBjdXJyZW50Q2VudHVyeTtcbiAgfVxuICByZXR1cm4geWVhcjtcbn07XG5cbmNvbnN0IGlzSW52YWxpZERhdGUgPSAoZGF0ZTogRGF0ZSk6IGJvb2xlYW4gPT4ge1xuICByZXR1cm4gTnVtYmVyLmlzTmFOKGRhdGUuZ2V0VGltZSgpKTtcbn07XG5cbmNvbnN0IGZpbmRBbGxZZWFyQW5kRGF5cyA9ICh0ZXh0OiBzdHJpbmcpOiBEYXRlW10gPT4ge1xuICBjb25zdCBub3JtYWxpemVkVGV4dCA9IHplbmtha3VEaWdpdHNUb0hhbmtha3UodGV4dCkucmVwbGFjZSgvXFxzL2csICcnKTtcbiAgY29uc3QgZGF0ZVJlZ2V4ID1cbiAgICAvKD86KD88eWVhcj5cXGR7MSw0fVtcXC/lubRdKT9cXHMqKD88ZGF0ZT5cXGR7MSwyfSg/OltcXC8tXVxcZHsxLDJ9fFxccz9bXFwv5pyIXVxccz9cXGR7MSwyfeaXpT8pKSkvZztcbiAgY29uc3QgbWF0Y2hlcyA9IEFycmF5LmZyb20obm9ybWFsaXplZFRleHQubWF0Y2hBbGwoZGF0ZVJlZ2V4KSk7XG5cbiAgY29uc3QgZGF0ZXMgPSBtYXRjaGVzLm1hcCgobWF0Y2gpID0+IHtcbiAgICBjb25zdCB5ZWFyID0gbWF0Y2guZ3JvdXBzPy55ZWFyXG4gICAgICA/IG5vcm1hbGl6ZVllYXIocGFyc2VJbnQobWF0Y2guZ3JvdXBzLnllYXIucmVwbGFjZSgvW1xcL+W5tF0vZywgJycpKSlcbiAgICAgIDogbmV3IERhdGUoKS5nZXRGdWxsWWVhcigpO1xuICAgIGNvbnN0IGRhdGUgPSBtYXRjaC5ncm91cHM/LmRhdGUucmVwbGFjZSgvXFxzfOaciHzml6UvZywgJy8nKS5yZXBsYWNlKC9bXFwv5bm0XS9nLCAnLScpO1xuICAgIHJldHVybiBuZXcgRGF0ZShgJHt5ZWFyfS0ke2RhdGV9YCk7XG4gIH0pO1xuXG4gIHJldHVybiBkYXRlcy5maWx0ZXIoKGRhdGUpID0+ICFpc0ludmFsaWREYXRlKGRhdGUpKTtcbn07XG5cbnR5cGUgVGltZSA9IHtcbiAgaG91cjogbnVtYmVyO1xuICBtaW51dGU6IG51bWJlcjtcbn07XG5cbmNvbnN0IGZpbmRBbGxUaW1lcyA9ICh0ZXh0OiBzdHJpbmcpOiBUaW1lW10gPT4ge1xuICBjb25zdCB0aW1lUmVnZXggPSAvKD88aG91cj5cXGR7MSwyfSlbOu+8muaZgl0oPzxtaW51dGU+XFxkezJ9KT8oPyHplpMpL2c7XG4gIGNvbnN0IG1hdGNoZXMgPSBBcnJheS5mcm9tKHRleHQubWF0Y2hBbGwodGltZVJlZ2V4KSk7XG5cbiAgY29uc3QgdGltZXMgPSBtYXRjaGVzLm1hcCgobWF0Y2gpID0+IHtcbiAgICByZXR1cm4ge1xuICAgICAgaG91cjogcGFyc2VJbnQobWF0Y2guZ3JvdXBzPy5ob3VyID8/ICcwJyksXG4gICAgICBtaW51dGU6IHBhcnNlSW50KG1hdGNoLmdyb3Vwcz8ubWludXRlID8/ICcwJyksXG4gICAgfTtcbiAgfSk7XG5cbiAgcmV0dXJuIHRpbWVzO1xufTtcblxuY29uc3QgZmluZFRpbWVSYW5nZSA9ICh0ZXh0OiBzdHJpbmcpOiBUaW1lIHwgdW5kZWZpbmVkID0+IHtcbiAgY29uc3QgdGltZVJlZ2V4ID0gLyg/PGhvdXI+XFxkezEsMn0p5pmC6ZaTKD88bWludXRlPijljYp8XFxkezEsMn3liIYpKT8vO1xuICBjb25zdCBtYXRjaCA9IHRleHQubWF0Y2godGltZVJlZ2V4KTtcblxuICBpZiAoIW1hdGNoIHx8ICFtYXRjaC5ncm91cHM/LmhvdXIpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICBjb25zdCBob3VyID0gcGFyc2VJbnQobWF0Y2guZ3JvdXBzLmhvdXIpO1xuICBjb25zdCBtaW51dGUgPVxuICAgIG1hdGNoLmdyb3Vwcz8ubWludXRlID09PSAn5Y2KJyA/IDMwIDogcGFyc2VJbnQobWF0Y2guZ3JvdXBzPy5taW51dGUgPz8gJzAnKTtcbiAgcmV0dXJuIHsgaG91ciwgbWludXRlIH07XG59O1xuXG5jb25zdCBhZGRUaW1lID0gKHg6IFRpbWUsIHk6IFRpbWUpOiBUaW1lID0+IHtcbiAgcmV0dXJuIHtcbiAgICBob3VyOiB4LmhvdXIgKyB5LmhvdXIsXG4gICAgbWludXRlOiB4Lm1pbnV0ZSArIHkubWludXRlLFxuICB9O1xufTtcblxuY29uc3Qgc2V0VGltZVRvRGF0ZSA9IChkYXRlOiBEYXRlLCB0aW1lOiBUaW1lKTogRGF0ZSA9PiB7XG4gIHJldHVybiBuZXcgRGF0ZShkYXRlLnNldEhvdXJzKHRpbWUuaG91ciwgdGltZS5taW51dGUpKTtcbn07XG5cbmV4cG9ydCBjb25zdCBleHRyYWN0U3RhcnRBbmRFbmREYXRlcyA9ICh0ZXh0OiBzdHJpbmcpOiBFdmVudERhdGVzID0+IHtcbiAgY29uc3QgeWVhckFuZERheXMgPSBmaW5kQWxsWWVhckFuZERheXModGV4dCk7XG4gIGNvbnN0IHRpbWVzID0gZmluZEFsbFRpbWVzKHRleHQpO1xuXG4gIGlmICh5ZWFyQW5kRGF5cy5sZW5ndGggPT09IDApIHtcbiAgICByZXR1cm4ge1xuICAgICAgaXNBbGxkYXk6IHRydWUsXG4gICAgICBzdGFydDogbmV3IERhdGUoKSxcbiAgICB9O1xuICB9XG5cbiAgaWYgKHRpbWVzLmxlbmd0aCA9PT0gMCkge1xuICAgIHJldHVybiB7XG4gICAgICBpc0FsbGRheTogdHJ1ZSxcbiAgICAgIHN0YXJ0OiB5ZWFyQW5kRGF5c1swXSxcbiAgICB9O1xuICB9XG5cbiAgLy8gc3RhcnTjga7ml6Xku5jjgavmmYLliLvjgpLoqK3lrppcbiAgY29uc3Qgc3RhcnQgPSBzZXRUaW1lVG9EYXRlKHllYXJBbmREYXlzWzBdLCB0aW1lc1swXSk7XG5cbiAgLy8gZW5k44Gu5pel5LuY44KS5oyH5a6a44CC5pmC5Yi744GM6KSH5pWw44GC44KL5aC05ZCI44Gv77yS44Gk55uu44KS44CB44Gq44GE5aC05ZCI44Gv77yR44Gk55uu77yIc3RhcnTjgajlkIzjgZjvvInjgpLkvb/jgYbjgIJcbiAgLy8g44Gf44Gg44GX44CB77yS44Gk55uu44Gu5pel5LuY44GM77yR44Gk55uu44KI44KK5YmN44Gu5aC05ZCI44Gv77yR44Gk55uu44KS5L2/44GG44CCXG4gIGNvbnN0IGVuZFRhcmdldERhdGUgPVxuICAgIHllYXJBbmREYXlzLmxlbmd0aCA+IDEgJiYgeWVhckFuZERheXNbMV0uZ2V0VGltZSgpID4geWVhckFuZERheXNbMF0uZ2V0VGltZSgpXG4gICAgICA/IHllYXJBbmREYXlzWzFdXG4gICAgICA6IHllYXJBbmREYXlzWzBdO1xuXG4gIC8vIOaJgOimgeaZgumWk+OBjOaMh+WumuOBleOCjOOBpuOBhOOCi+WgtOWQiOOBr+OAgXN0YXJ044Gu5pmC5Yi744Gr5omA6KaB5pmC6ZaT44KS5Yqg566X44GX44GmZW5k44Gu5pmC5Yi744KS6Kit5a6aXG4gIC8vIOaMh+WumuOBleOCjOOBpuOBhOOBquOBhOWgtOWQiOOBr+OAge+8kuOBpOebruOBruaZguWIu+OBvuOBn+OBr3N0YXJ044Gu5pmC5Yi744Gr77yR5pmC6ZaT44KS5Yqg566X44GX44GmZW5k44Gu5pmC5Yi744KS6Kit5a6aXG4gIGNvbnN0IHRpbWVSYW5nZSA9IGZpbmRUaW1lUmFuZ2UodGV4dCk7XG4gIGNvbnN0IGVuZFRhcmdldFRpbWUgPSB0aW1lUmFuZ2VcbiAgICA/IGFkZFRpbWUodGltZXNbMF0sIHRpbWVSYW5nZSlcbiAgICA6IHRpbWVzLmxlbmd0aCA+IDFcbiAgICA/IHRpbWVzWzFdXG4gICAgOiBhZGRUaW1lKHRpbWVzWzBdLCB7IGhvdXI6IDEsIG1pbnV0ZTogMCB9KTtcbiAgY29uc3QgZW5kID0gc2V0VGltZVRvRGF0ZShlbmRUYXJnZXREYXRlLCBlbmRUYXJnZXRUaW1lKTtcblxuICByZXR1cm4ge1xuICAgIGlzQWxsZGF5OiBmYWxzZSxcbiAgICBzdGFydCxcbiAgICBlbmQsXG4gIH07XG59O1xuIiwiaW1wb3J0IHsgRXZlbnREYXRlcywgR29vZ2xlQ2FsZW5kYXJFdmVudCwgbWFrZUdvb2dsZUNhbGVuZGFyRXZlbnRVUkwgfSBmcm9tICcuLi9ldmVudCc7XG5pbXBvcnQgeyBleHRyYWN0U3RhcnRBbmRFbmREYXRlcyB9IGZyb20gJy4vZGF0ZXMnO1xuaW1wb3J0IHsgZXh0cmFjdE1lZXRpbmdVUkwgfSBmcm9tICcuL2xvY2F0aW9uJztcblxuLyoqXG4gKiB0ZXh044GL44KJ44Kk44OZ44Oz44OI44K/44Kk44OI44Or44KS5oq95Ye644GZ44KL44CCXG4gKiDmnIDliJ3jga7ooYzjgpLjgqTjg5njg7Pjg4jjgr/jgqTjg4jjg6vjgajjgZfjgabmibHjgYbjgIJcbiAqL1xuY29uc3QgZXh0cmFjdEV2ZW50VGl0bGVBbmREZXRhaWxzID0gKFxuICB0ZXh0OiBzdHJpbmdcbik6IFBpY2s8R29vZ2xlQ2FsZW5kYXJFdmVudCwgJ3RleHQnIHwgJ2RldGFpbHMnPiA9PiB7XG4gIGNvbnN0IGxpbmVzID0gdGV4dC5zcGxpdCgnXFxuJyk7XG5cbiAgcmV0dXJuIHtcbiAgICB0ZXh0OiBsaW5lc1swXSxcbiAgICBkZXRhaWxzOiBsaW5lcy5zbGljZSgxKS5qb2luKCdcXG4nKSxcbiAgfTtcbn07XG5cbmV4cG9ydCBjb25zdCBtYWtlR29vZ2xlQ2FsZW5kYXJFdmVudFBhcmFtcyA9IChwbGFpblRleHQ6IHN0cmluZyk6IEdvb2dsZUNhbGVuZGFyRXZlbnQgPT4ge1xuICBjb25zdCB7IHRleHQsIGRldGFpbHMgfSA9IGV4dHJhY3RFdmVudFRpdGxlQW5kRGV0YWlscyhwbGFpblRleHQpO1xuICBjb25zdCBkYXRlczogRXZlbnREYXRlcyA9IGV4dHJhY3RTdGFydEFuZEVuZERhdGVzKHBsYWluVGV4dCk7XG4gIGNvbnN0IG1lZXRpbmdVUkwgPSBleHRyYWN0TWVldGluZ1VSTChwbGFpblRleHQpO1xuXG4gIHJldHVybiB7XG4gICAgdGV4dCxcbiAgICBkZXRhaWxzLFxuICAgIGRhdGVzLFxuICAgIGxvY2F0aW9uOiBtZWV0aW5nVVJMLFxuICB9O1xufTsiLCJleHBvcnQgY29uc3QgZXh0cmFjdE1lZXRpbmdVUkwgPSAodGV4dDogc3RyaW5nKTogc3RyaW5nIHwgdW5kZWZpbmVkID0+IHtcbiAgY29uc3QgdXJsUmVnZXggPSBbXG4gICAgL2h0dHBzOlxcL1xcLyg/OlthLXpBLVowLTktXStcXC4pP3pvb21cXC51c1xcL2pcXC9bYS16QS1aMC05XSsoPzpcXD9wd2Q9W2EtekEtWjAtOV0rKT8vLCAvLyBab29tXG4gICAgL2h0dHBzOlxcL1xcL21lZXRcXC5nb29nbGVcXC5jb21cXC9bYS16QS1aMC05XXszfS1bYS16QS1aMC05XXs0fS1bYS16QS1aMC05XXszfSg/OlxcP1stYS16QS1aMC05PSZdKyk/LywgLy8gR29vZ2xlIE1lZXRcbiAgXTtcblxuICBmb3IgKGNvbnN0IHJlZ2V4IG9mIHVybFJlZ2V4KSB7XG4gICAgY29uc3QgbWF0Y2ggPSB0ZXh0Lm1hdGNoKHJlZ2V4KTtcbiAgICBpZiAobWF0Y2gpIHtcbiAgICAgIHJldHVybiBtYXRjaFswXTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gdW5kZWZpbmVkO1xufTtcbiIsImltcG9ydCB7IGdldENsaXBib2FyZEhUTUwgfSBmcm9tICcuL2xpYi9jbGlwYm9hcmQnO1xuaW1wb3J0IHsgR29vZ2xlQ2FsZW5kYXJFdmVudCwgbWFrZUdvb2dsZUNhbGVuZGFyRXZlbnRVUkwgfSBmcm9tICcuL2V2ZW50L2V2ZW50JztcbmltcG9ydCB7IG1ha2VHb29nbGVDYWxlbmRhckV2ZW50UGFyYW1zIH0gZnJvbSAnLi9ldmVudC9wYXJzZXIvbWFpbic7XG5cbmNvbnN0IHNldFByZXZpZXcgPSAoZXZlbnRQYXJhbXM6IEdvb2dsZUNhbGVuZGFyRXZlbnQpID0+IHtcbiAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3ByZXZpZXdUaXRsZScpIS5pbm5lclRleHQgPSBldmVudFBhcmFtcy50ZXh0O1xuICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncHJldmlld0Rlc2NyaXB0aW9uJykhLmlubmVyVGV4dCA9IGV2ZW50UGFyYW1zLmRldGFpbHM7XG4gIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdwcmV2aWV3TG9jYXRpb24nKSEuaW5uZXJUZXh0ID0gZXZlbnRQYXJhbXMubG9jYXRpb24gPz8gJyc7XG5cbiAgaWYgKCFldmVudFBhcmFtcy5kYXRlcykge1xuICAgIHJldHVybjtcbiAgfVxuICBjb25zdCBkYXRlVGV4dCA9IGV2ZW50UGFyYW1zLmRhdGVzLmlzQWxsZGF5XG4gICAgPyBldmVudFBhcmFtcy5kYXRlcy5zdGFydC50b0xvY2FsZURhdGVTdHJpbmcoKVxuICAgIDogYCR7ZXZlbnRQYXJhbXMuZGF0ZXMuc3RhcnQudG9Mb2NhbGVTdHJpbmcoKX0gLSAke2V2ZW50UGFyYW1zLmRhdGVzLmVuZC50b0xvY2FsZVN0cmluZygpfWA7XG4gIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdwcmV2aWV3RGF0ZScpIS5pbm5lclRleHQgPSBkYXRlVGV4dDtcbiAgcmV0dXJuO1xufTtcblxubGV0IGV2ZW50UGFyYW1zID0gbWFrZUdvb2dsZUNhbGVuZGFyRXZlbnRQYXJhbXMoJycpO1xubGV0IGNsaXBib2FyZEh0bWw6IHN0cmluZyB8IHVuZGVmaW5lZDtcblxuZG9jdW1lbnQ/LmdldEVsZW1lbnRCeUlkKCdldmVudERldGFpbHMnKT8uYWRkRXZlbnRMaXN0ZW5lcigncGFzdGUnLCBhc3luYyAoKSA9PiB7XG4gIGNvbnN0IHVzZUh0bWwgPVxuICAgIChkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndXNlSHRtbCcpIGFzIEhUTUxJbnB1dEVsZW1lbnQpPy5jaGVja2VkID8/IGZhbHNlO1xuICBjbGlwYm9hcmRIdG1sID0gdXNlSHRtbCA/IGF3YWl0IGdldENsaXBib2FyZEhUTUwoKSA6IHVuZGVmaW5lZDtcbn0pO1xuXG5kb2N1bWVudD8uZ2V0RWxlbWVudEJ5SWQoJ2V2ZW50RGV0YWlscycpPy5hZGRFdmVudExpc3RlbmVyKCdpbnB1dCcsICgpID0+IHtcbiAgY29uc3QgaW5wdXRUZXh0ID0gKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdldmVudERldGFpbHMnKSBhcyBIVE1MVGV4dEFyZWFFbGVtZW50KVxuICAgID8udmFsdWU7XG5cbiAgY29uc3QgdGV4dCA9IGNsaXBib2FyZEh0bWxcbiAgICA/IGlucHV0VGV4dC5zcGxpdCgnXFxuJylbMF0gKyAnXFxuJyArIGNsaXBib2FyZEh0bWxcbiAgICA6IGlucHV0VGV4dDtcbiAgZXZlbnRQYXJhbXMgPSBtYWtlR29vZ2xlQ2FsZW5kYXJFdmVudFBhcmFtcyh0ZXh0KTtcbiAgc2V0UHJldmlldyhldmVudFBhcmFtcyk7XG59KTtcblxuZG9jdW1lbnQ/LmdldEVsZW1lbnRCeUlkKCdnZW5lcmF0ZUxpbmsnKT8uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gIGNvbnN0IGV2ZW50VXJsID0gbWFrZUdvb2dsZUNhbGVuZGFyRXZlbnRVUkwoZXZlbnRQYXJhbXMpO1xuXG4gIHdpbmRvdy5vcGVuKGV2ZW50VXJsLCAnX2JsYW5rJyk7XG59KTtcbiJdLCJuYW1lcyI6WyJwYXJhbVRvVVJMUGFyYW0iLCJrZXkiLCJ2YWx1ZSIsImVuY29kZVVSSUNvbXBvbmVudCIsImRhdGVUb1JGQzU1NDUiLCJkYXRlIiwidG9JU09TdHJpbmciLCJyZXBsYWNlIiwiZGF0ZVBhcmFtVG9VUkxQYXJhbSIsImV2ZW50RGF0ZXMiLCJpc0FsbGRheSIsInN0YXJ0IiwiRGF0ZSIsInRpbWUiLCJlbmQiLCJhZGRUaW1lIiwieCIsInkiLCJob3VyIiwibWludXRlIiwic2V0VGltZVRvRGF0ZSIsInNldEhvdXJzIiwiZXh0cmFjdFN0YXJ0QW5kRW5kRGF0ZXMiLCJ0ZXh0IiwieWVhckFuZERheXMiLCJub3JtYWxpemVkVGV4dCIsInMiLCJTdHJpbmciLCJmcm9tQ2hhckNvZGUiLCJjaGFyQ29kZUF0IiwiemVua2FrdURpZ2l0c1RvSGFua2FrdSIsIkFycmF5IiwiZnJvbSIsIm1hdGNoQWxsIiwibWFwIiwibWF0Y2giLCJ5ZWFyIiwiZ3JvdXBzIiwiTWF0aCIsImZsb29yIiwiZ2V0RnVsbFllYXIiLCJub3JtYWxpemVZZWFyIiwicGFyc2VJbnQiLCJmaWx0ZXIiLCJOdW1iZXIiLCJpc05hTiIsImdldFRpbWUiLCJpc0ludmFsaWREYXRlIiwiZmluZEFsbFllYXJBbmREYXlzIiwidGltZXMiLCJmaW5kQWxsVGltZXMiLCJsZW5ndGgiLCJlbmRUYXJnZXREYXRlIiwidGltZVJhbmdlIiwiZmluZFRpbWVSYW5nZSIsImVuZFRhcmdldFRpbWUiLCJtYWtlR29vZ2xlQ2FsZW5kYXJFdmVudFBhcmFtcyIsInBsYWluVGV4dCIsImRldGFpbHMiLCJsaW5lcyIsInNwbGl0Iiwic2xpY2UiLCJqb2luIiwiZXh0cmFjdEV2ZW50VGl0bGVBbmREZXRhaWxzIiwiZGF0ZXMiLCJtZWV0aW5nVVJMIiwidXJsUmVnZXgiLCJyZWdleCIsImV4dHJhY3RNZWV0aW5nVVJMIiwibG9jYXRpb24iLCJjbGlwYm9hcmRIdG1sIiwiZXZlbnRQYXJhbXMiLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwiYWRkRXZlbnRMaXN0ZW5lciIsImFzeW5jIiwidXNlSHRtbCIsImNoZWNrZWQiLCJjbGlwYm9hcmRJdGVtcyIsIm5hdmlnYXRvciIsImNsaXBib2FyZCIsInJlYWQiLCJpdGVtIiwidHlwZXMiLCJpbmNsdWRlcyIsImJsb2IiLCJnZXRUeXBlIiwiZSIsImNvbnNvbGUiLCJlcnJvciIsImdldENsaXBib2FyZEhUTUwiLCJ1bmRlZmluZWQiLCJpbnB1dFRleHQiLCJpbm5lclRleHQiLCJkYXRlVGV4dCIsInRvTG9jYWxlRGF0ZVN0cmluZyIsInRvTG9jYWxlU3RyaW5nIiwic2V0UHJldmlldyIsImV2ZW50VXJsIiwiZXZlbnQiLCJwYXJhbSIsIndpbmRvdyIsIm9wZW4iXSwic291cmNlUm9vdCI6IiJ9