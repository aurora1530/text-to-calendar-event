(()=>{"use strict";const e=(e,t)=>`${e}=${encodeURIComponent(t)}`,t=e=>e.toISOString().replace(/-|:|\.\d+/g,""),n=(n,r={isAllday:!0,start:new Date})=>{if(r.isAllday){const a=t(r.start).replace(/T.*$/,"");return e(n,`${a}/${a}`)}const a=t(r.start),o=t(r.end);return e(n,`${a}/${o}`)},r=(e,t)=>({hour:e.hour+t.hour,minute:e.minute+t.minute}),a=(e,t)=>new Date(e.setHours(t.hour,t.minute)),o=e=>{const t=(e=>{const t=(e=>e.replace(/[０-９]/g,(e=>String.fromCharCode(e.charCodeAt(0)-65248))))(e).replace(/\s/g,"");return Array.from(t.matchAll(/(?:(?<year>\d{1,4}[\/年])?\s*(?<date>\d{1,2}(?:[\/-]\d{1,2}|\s?[\/月]\s?\d{1,2}日?)))/g)).map((e=>{const t=e.groups?.year?(e=>e<100?e+100*Math.floor((new Date).getFullYear()/100):e)(parseInt(e.groups.year.replace(/[\/年]/g,""))):(new Date).getFullYear(),n=e.groups?.date.replace(/\s|月|日/g,"/").replace(/[\/年]/g,"-");return new Date(`${t}-${n}`)})).filter((e=>!(e=>Number.isNaN(e.getTime()))(e)))})(e),n=(e=>Array.from(e.matchAll(/(?<hour>\d{1,2})[:：時](?<minute>\d{2})?(?!間)/g)).map((e=>({hour:parseInt(e.groups?.hour??"0"),minute:parseInt(e.groups?.minute??"0")}))))(e);if(0===t.length)return{isAllday:!0,start:new Date};if(0===n.length)return{isAllday:!0,start:t[0]};const o=a(t[0],n[0]),s=t.length>1&&t[1].getTime()>t[0].getTime()?t[1]:t[0],i=(e=>{const t=e.match(/(?<hour>\d{1,2})時間(?<minute>(半|\d{1,2}分))?/);if(t&&t.groups?.hour)return{hour:parseInt(t.groups.hour),minute:"半"===t.groups?.minute?30:parseInt(t.groups?.minute??"0")}})(e),l=i?r(n[0],i):n.length>1?n[1]:r(n[0],{hour:1,minute:0});return{isAllday:!1,start:o,end:a(s,l)}},s=e=>{const{text:t,details:n}=(e=>{const t=e.split("\n");return{text:t[0],details:t.slice(1).join("\n")}})(e),r=o(e),a=(e=>{const t=[/https:\/\/(?:[a-zA-Z0-9-]+\.)?zoom\.us\/j\/[a-zA-Z0-9]+(?:\?pwd=[a-zA-Z0-9]+)?/,/https:\/\/meet\.google\.com\/[a-zA-Z0-9]{3}-[a-zA-Z0-9]{4}-[a-zA-Z0-9]{3}(?:\?[-a-zA-Z0-9=&]+)?/];for(const n of t){const t=e.match(n);if(t)return t[0]}})(e);return{text:t,details:n,dates:r,location:a}};let i,l=s("");document?.getElementById("eventDetails")?.addEventListener("paste",(async()=>{const e=document.getElementById("useHtml")?.checked??!1;i=e?await(async()=>{try{const e=await navigator.clipboard.read();for(const t of e)if(t.types.includes("text/html")){const e=await t.getType("text/html");return await e.text()}return}catch(e){return void console.error(e)}})():void 0,i=i?(e=>{const t=(new DOMParser).parseFromString(e,"text/html");return t.querySelectorAll("[style]").forEach((e=>{e.removeAttribute("style")})),t.documentElement.innerHTML})(i):void 0;const t=document.getElementById("eventDetails"),n=new Event("input",{bubbles:!0});t.dispatchEvent(n)})),document?.getElementById("eventDetails")?.addEventListener("input",(()=>{const e=document.getElementById("eventDetails")?.value,t=i?e.split("\n")[0]+"\n"+i:e;l=s(t),(e=>{if(document.getElementById("previewTitle").innerText=e.text,document.getElementById("previewDescription").innerHTML=e.details.replace(/<script.*?<\/script>/gs,""),document.getElementById("previewLocation").innerText=e.location??"",!e.dates)return;const t=e.dates.isAllday?e.dates.start.toLocaleDateString():`${e.dates.start.toLocaleString()} - ${e.dates.end.toLocaleString()}`;document.getElementById("previewDate").innerText=t})(l)})),document?.getElementById("generateLink")?.addEventListener("click",(()=>{const t=`https://calendar.google.com/calendar/render?action=TEMPLATE&${[e("text",(r=l).text),e("details",r.details),n("dates",r.dates),r.location?e("location",r.location):void 0].filter((e=>void 0!==e)).join("&")}`;var r;window.open(t,"_blank")}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,